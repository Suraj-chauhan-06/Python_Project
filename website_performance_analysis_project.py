# -*- coding: utf-8 -*-
"""website performance analysis project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18ZKeqE3xz20ZUVbwr1JL9U2i4-aQw65P
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv("/content/data-export (1) (1).csv")

print(df.head())

df.columns = df.iloc[0]
df = df.drop(index = 0).reset_index(drop = True)
df.columns = ["Channel Group","Datehour","User","Sessions","Enagaged Session","Average engagement time per session","Engaged sessions per user","Events per session","Engagement rate","Event count"]

print(df.head())

df.info()

df["Datehour"] = pd.to_datetime(df["Datehour"], format = "%Y%m%d%H" ,errors='coerce')
numeric_cols = df.columns.drop(["Channel Group","Datehour"])
df[numeric_cols] = df[numeric_cols].apply(pd.to_numeric, errors='coerce')
df["hour"] = df["Datehour"].dt.hour

df.info()
df.head()

df.describe()

"""**Session And User Over Time**"""

sns.set(style = "whitegrid")

plt.figure(figsize = (12,5))
df.groupby("Datehour") [["Sessions","User"]].sum().plot(ax=plt.gca())
plt.title("Session And User overtime")
plt.xlabel("Datehour")
plt.ylabel("Count")
plt.show()

"""**Total User By Channel**"""

plt.figure(figsize = (8,5))
sns.barplot(data=df , x="Channel Group" , y="User",estimator = np.sum,palette="viridis")
plt.title("Total User By Channel")
plt.xticks(rotation = 45)
plt.show()

df.head()

"""**Average Engagement Time** **By Channel**"""

plt.figure(figsize =(8,5))
sns.barplot(data=df ,x="Channel Group" , y="Average engagement time per session",estimator = np.mean,palette="magma")
plt.title("Average Engagement Time By Channel")
plt.xticks(rotation = 45)
plt.show()

df.head()

"""**Engagement Rate Distribution By Channel**"""

plt.figure(figsize=(8,5))
sns.boxplot(data=df ,x="Channel Group",y="Engagement rate",palette="coolwarm")
plt.title("Engagement Rate Distribution By Channel")
plt.xticks(rotation = 45)
plt.show()

"""**Engaged VS Non Engaged Sessions**"""

df.head()

df["Sessions"] = pd.to_numeric(df["Sessions"], errors='coerce')
df["Enagaged Session"] = pd.to_numeric(df["Enagaged Session"], errors='coerce')


session_df = df.groupby("Channel Group")[["Sessions", "Enagaged Session"]].sum().reset_index()
session_df["Non-Engaged"] = session_df["Sessions"] - session_df["Enagaged Session"]
session_df_melted = session_df.melt(id_vars="Channel Group", value_vars=["Enagaged Session", "Non-Engaged"])


plt.figure(figsize=(8, 5))
sns.barplot(data=session_df_melted, x="Channel Group", y="value", hue="variable")
plt.title("Engaged vs Non-Engaged Sessions")
plt.xticks(rotation=45)
plt.show()

"""**Traffic By Hour And Channel**"""

heatmap_data = df.groupby(["hour", "Channel Group"])["Sessions"].sum().unstack().fillna(0)

plt.figure(figsize=(12, 6))
sns.heatmap(heatmap_data, cmap="YlGnBu", linewidths=.5, annot=True, fmt='.0f')
plt.title("ðŸ”µ Traffic by Hour and Channel")
plt.xlabel("Channel Group")
plt.ylabel("Hour of Day")
plt.show()

heatmap_data = df.groupby(["hour", "Channel Group"])["Sessions"].sum().unstack().fillna(0)

plt.figure(figsize=(12, 6))
sns.heatmap(heatmap_data, cmap="YlGnBu", linewidths=.5, annot=True, fmt='.0f')
plt.title("ðŸ”µ Traffic by Hour and Channel")
plt.xlabel("Channel Group")
plt.ylabel("Hour of Day")
plt.show()

"""**Engagement Rate VS Session Over Time**"""

df.head()

df_plot = df.groupby("Datehour")[["Engagement rate", "Sessions"]].mean().reset_index()

plt.figure(figsize=(10, 5))
plt.plot(df_plot["Datehour"], df_plot["Engagement rate"], label="Engagement rate", color="green")
plt.plot(df_plot["Datehour"], df_plot["Sessions"], label="Sessions", color="blue")
plt.title("Engagement Rate vs Sessions Over Time")
plt.xlabel("Datehour")
plt.legend()
plt.grid(True)
plt.show()